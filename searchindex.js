Search.setIndex({"alltitles": {"2020 (2)": [[32, "id6"]], "2021 (4)": [[32, "id5"]], "2022 (12)": [[32, "id4"]], "2023 (8)": [[32, "id3"]], "2024 (16)": [[32, "id2"]], "2025 (13)": [[32, "id1"]], "API Reference": [[16, "api-reference"], [17, "api-reference"], [18, "api-reference"]], "Ab initio silicon diamond": [[29, "Ab-initio-silicon-diamond"]], "Access and visualize properties calculated during simulations": [[15, "Access-and-visualize-properties-calculated-during-simulations"], [23, "Access-and-visualize-properties-calculated-during-simulations"]], "Acknowledgements": [[22, null], [31, null]], "Alternative Storage": [[30, "Alternative-Storage"]], "Amorphous silicon": [[29, "Amorphous-silicon"]], "Amorphous silicon tutorial": [[15, null]], "Basic Concepts": [[29, null]], "Boltzman Transport Equation": [[29, "Boltzman-Transport-Equation"]], "Calculate and visualize \\kappa_{per \\ mode} and \\kappa_{cum}": [[15, "Calculate-and-visualize-\\kappa_{per-\\-mode}-and-\\kappa_{cum}"], [23, "Calculate-and-visualize-\\kappa_{per-\\-mode}-and-\\kappa_{cum}"]], "Calculate conductivities for infinite-size sample": [[23, "Calculate-conductivities-for-infinite-size-sample"]], "Calculating IFCs in kALDo": [[17, "calculating-ifcs-in-kaldo"]], "Calculation Workflow": [[17, "calculation-workflow"]], "Checklist for updates": [[21, "checklist-for-updates"]], "Citations": [[31, null]], "Classical Limit": [[18, "classical-limit"]], "Code Architecture": [[20, null]], "Complie LAMMPS as shared-library of python (\\sim 10 min)": [[23, "Complie-LAMMPS-as-shared-library-of-python-(\\sim-10-min)"]], "Conductivity": [[16, null]], "Copyright": [[27, "copyright"]], "Create phonons object": [[15, "Create-phonons-object"], [23, "Create-phonons-object"]], "Default Storage": [[30, "Default-Storage"]], "Developer Guide": [[31, null]], "Development mode": [[25, "development-mode"]], "Examples": [[24, null]], "Features": [[26, "Features"]], "Fetch supplyment data remotely": [[15, "Fetch-supplyment-data-remotely"]], "ForceConstants": [[17, null]], "General vs. Case-Specific Arguments": [[18, "general-vs-case-specific-arguments"]], "Getting Started": [[31, null]], "Hint": [[17, null], [17, null], [17, null], [17, null], [18, null]], "How to cite": [[19, null]], "How to contribute changes": [[21, null]], "Index": [[31, "index"]], "Input Files": [[17, "id4"]], "Input Files and Formats": [[17, "input-files-and-formats"]], "Interatomic potentials": [[29, "Interatomic-potentials"]], "Interfacing with Other Codes": [[30, null]], "Introduction": [[31, null]], "LAMMPS executable setup": [[30, "LAMMPS-executable-setup"]], "LAMMPS library setup": [[30, "LAMMPS-library-setup"]], "License": [[31, null]], "License Information": [[27, null]], "Loading Precalculated IFCs": [[17, "loading-precalculated-ifcs"]], "Other codes": [[28, null]], "Output Storage": [[30, "Output-Storage"]], "Overview": [[26, null]], "Periodicity and k-points": [[18, "periodicity-and-k-points"]], "Phonons": [[18, null]], "Preprints (8)": [[32, "preprints-8"]], "Project template": [[21, "project-template"]], "Publications using kALDo": [[32, null]], "Quantum Espresso setup": [[30, "Quantum-Espresso-setup"]], "Quasi-Harmonic Green Kubo": [[29, "Quasi-Harmonic-Green-Kubo"]], "Quick Install": [[25, null]], "Reference": [[31, null]], "References": [[19, "references"], [29, "References"]], "Should I use kALDo to calculate my IFCs?": [[17, "should-i-use-kaldo-to-calculate-my-ifcs"]], "Silicon diamond tutorial": [[23, null]], "Thermal transport simulation for Amorphous-Silicon (a-Si)": [[15, "Thermal-transport-simulation-for-Amorphous-Silicon-(a-Si)"]], "Thermal transport simulation for silicon-bulk": [[23, "Thermal-transport-simulation-for-silicon-bulk"]], "Tutorials and examples": [[31, null]], "Units": [[30, "Units"]], "User Guide": [[31, null]], "Using pip and virtualenv": [[25, "using-pip-and-virtualenv"]], "Versioneer Auto-version": [[21, "versioneer-auto-version"]], "Visualize harmonic properties using built-in plotter": [[23, "Visualize-harmonic-properties-using-built-in-plotter"]], "Workflow": [[29, "Workflow"]], "Write forcefield file": [[23, "Write-forcefield-file"]], "kALDo: Advanced Thermal Property Predictions via Lattice Dynamics and Machine Learning for Nanoscale Materials.": [[31, null]], "kaldo.phonons.Phonons.anharmonic_bandwidth": [[0, null]], "kaldo.phonons.Phonons.bandwidth": [[1, null]], "kaldo.phonons.Phonons.eigenvalues": [[2, null]], "kaldo.phonons.Phonons.eigenvectors": [[3, null]], "kaldo.phonons.Phonons.frequency": [[4, null]], "kaldo.phonons.Phonons.heat_capacity": [[5, null]], "kaldo.phonons.Phonons.heat_capacity_2d": [[6, null]], "kaldo.phonons.Phonons.isotopic_bandwidth": [[7, null]], "kaldo.phonons.Phonons.omega": [[8, null]], "kaldo.phonons.Phonons.participation_ratio": [[9, null]], "kaldo.phonons.Phonons.pdos": [[10, null]], "kaldo.phonons.Phonons.phase_space": [[11, null]], "kaldo.phonons.Phonons.physical_mode": [[12, null]], "kaldo.phonons.Phonons.population": [[13, null]], "kaldo.phonons.Phonons.velocity": [[14, null]], "pip install \\kappaALDo": [[15, "pip-install-\\kappaALDo"], [23, "pip-install-\\kappaALDo"]]}, "docurls": ["docsource/API/Phonons/kaldo.phonons.Phonons.anharmonic_bandwidth.html", "docsource/API/Phonons/kaldo.phonons.Phonons.bandwidth.html", "docsource/API/Phonons/kaldo.phonons.Phonons.eigenvalues.html", "docsource/API/Phonons/kaldo.phonons.Phonons.eigenvectors.html", "docsource/API/Phonons/kaldo.phonons.Phonons.frequency.html", "docsource/API/Phonons/kaldo.phonons.Phonons.heat_capacity.html", "docsource/API/Phonons/kaldo.phonons.Phonons.heat_capacity_2d.html", "docsource/API/Phonons/kaldo.phonons.Phonons.isotopic_bandwidth.html", "docsource/API/Phonons/kaldo.phonons.Phonons.omega.html", "docsource/API/Phonons/kaldo.phonons.Phonons.participation_ratio.html", "docsource/API/Phonons/kaldo.phonons.Phonons.pdos.html", "docsource/API/Phonons/kaldo.phonons.Phonons.phase_space.html", "docsource/API/Phonons/kaldo.phonons.Phonons.physical_mode.html", "docsource/API/Phonons/kaldo.phonons.Phonons.population.html", "docsource/API/Phonons/kaldo.phonons.Phonons.velocity.html", "docsource/amorphous_presentation.html", "docsource/api_conductivity.html", "docsource/api_forceconstants.html", "docsource/api_phonons.html", "docsource/citations.html", "docsource/code_architecture.html", "docsource/contributing.html", "docsource/credits.html", "docsource/crystal_presentation.html", "docsource/examples.html", "docsource/getting_started.html", "docsource/introduction.html", "docsource/license.html", "docsource/other_codes.html", "docsource/theory.html", "docsource/user_guide.html", "index.html", "publications/readme.html"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "indexentries": {"anharmonic_bandwidth (kaldo.phonons.phonons property)": [[0, "kaldo.phonons.Phonons.anharmonic_bandwidth", false], [18, "kaldo.phonons.Phonons.anharmonic_bandwidth", false]], "bandwidth (kaldo.phonons.phonons property)": [[1, "kaldo.phonons.Phonons.bandwidth", false], [18, "kaldo.phonons.Phonons.bandwidth", false]], "calculate_conductivity_full() (kaldo.conductivity.conductivity method)": [[16, "kaldo.conductivity.Conductivity.calculate_conductivity_full", false]], "calculate_mfp_inverse() (kaldo.conductivity.conductivity method)": [[16, "kaldo.conductivity.Conductivity.calculate_mfp_inverse", false]], "calculate_scattering_matrix() (kaldo.conductivity.conductivity method)": [[16, "kaldo.conductivity.Conductivity.calculate_scattering_matrix", false]], "cell_inv (kaldo.forceconstants.forceconstants attribute)": [[17, "kaldo.forceconstants.ForceConstants.cell_inv", false]], "conductivity (class in kaldo.conductivity)": [[16, "kaldo.conductivity.Conductivity", false]], "conductivity (kaldo.conductivity.conductivity property)": [[16, "kaldo.conductivity.Conductivity.conductivity", false]], "diffusivity (kaldo.conductivity.conductivity property)": [[16, "kaldo.conductivity.Conductivity.diffusivity", false]], "eigenvalues (kaldo.phonons.phonons property)": [[2, "kaldo.phonons.Phonons.eigenvalues", false], [18, "kaldo.phonons.Phonons.eigenvalues", false]], "eigenvectors (kaldo.phonons.phonons property)": [[3, "kaldo.phonons.Phonons.eigenvectors", false], [18, "kaldo.phonons.Phonons.eigenvectors", false]], "elastic_prop() (kaldo.forceconstants.forceconstants method)": [[17, "kaldo.forceconstants.ForceConstants.elastic_prop", false]], "forceconstants (class in kaldo.forceconstants)": [[17, "kaldo.forceconstants.ForceConstants", false]], "free_energy (kaldo.phonons.phonons property)": [[18, "kaldo.phonons.Phonons.free_energy", false]], "frequency (kaldo.phonons.phonons property)": [[4, "kaldo.phonons.Phonons.frequency", false], [18, "kaldo.phonons.Phonons.frequency", false]], "from_folder() (kaldo.forceconstants.forceconstants class method)": [[17, "kaldo.forceconstants.ForceConstants.from_folder", false]], "heat_capacity (kaldo.phonons.phonons property)": [[5, "kaldo.phonons.Phonons.heat_capacity", false], [18, "kaldo.phonons.Phonons.heat_capacity", false]], "heat_capacity_2d (kaldo.phonons.phonons property)": [[6, "kaldo.phonons.Phonons.heat_capacity_2d", false], [18, "kaldo.phonons.Phonons.heat_capacity_2d", false]], "isotopic_bandwidth (kaldo.phonons.phonons property)": [[7, "kaldo.phonons.Phonons.isotopic_bandwidth", false], [18, "kaldo.phonons.Phonons.isotopic_bandwidth", false]], "mean_free_path (kaldo.conductivity.conductivity property)": [[16, "kaldo.conductivity.Conductivity.mean_free_path", false]], "n_atoms (kaldo.forceconstants.forceconstants attribute)": [[17, "kaldo.forceconstants.ForceConstants.n_atoms", false]], "n_modes (kaldo.forceconstants.forceconstants attribute)": [[17, "kaldo.forceconstants.ForceConstants.n_modes", false]], "n_replicas (kaldo.forceconstants.forceconstants attribute)": [[17, "kaldo.forceconstants.ForceConstants.n_replicas", false]], "n_replicated_atoms (kaldo.forceconstants.forceconstants attribute)": [[17, "kaldo.forceconstants.ForceConstants.n_replicated_atoms", false]], "omega (kaldo.phonons.phonons property)": [[8, "kaldo.phonons.Phonons.omega", false], [18, "kaldo.phonons.Phonons.omega", false]], "participation_ratio (kaldo.phonons.phonons property)": [[9, "kaldo.phonons.Phonons.participation_ratio", false], [18, "kaldo.phonons.Phonons.participation_ratio", false]], "pdos() (kaldo.phonons.phonons method)": [[10, "kaldo.phonons.Phonons.pdos", false], [18, "kaldo.phonons.Phonons.pdos", false]], "phase_space (kaldo.phonons.phonons property)": [[11, "kaldo.phonons.Phonons.phase_space", false], [18, "kaldo.phonons.Phonons.phase_space", false]], "phonons (class in kaldo.phonons)": [[18, "kaldo.phonons.Phonons", false]], "physical_mode (kaldo.phonons.phonons property)": [[12, "kaldo.phonons.Phonons.physical_mode", false], [18, "kaldo.phonons.Phonons.physical_mode", false]], "population (kaldo.phonons.phonons property)": [[13, "kaldo.phonons.Phonons.population", false], [18, "kaldo.phonons.Phonons.population", false]], "sigma2_tdep_md() (kaldo.forceconstants.forceconstants static method)": [[17, "kaldo.forceconstants.ForceConstants.sigma2_tdep_MD", false]], "sparse_phase (kaldo.phonons.phonons property)": [[18, "kaldo.phonons.Phonons.sparse_phase", false]], "sparse_potential (kaldo.phonons.phonons property)": [[18, "kaldo.phonons.Phonons.sparse_potential", false]], "unfold_third_order() (kaldo.forceconstants.forceconstants method)": [[17, "kaldo.forceconstants.ForceConstants.unfold_third_order", false]], "velocity (kaldo.phonons.phonons property)": [[14, "kaldo.phonons.Phonons.velocity", false], [18, "kaldo.phonons.Phonons.velocity", false]], "zero_point_harmonic_energy (kaldo.phonons.phonons property)": [[18, "kaldo.phonons.Phonons.zero_point_harmonic_energy", false]]}, "objects": {"kaldo.conductivity": [[16, 0, 1, 0, "Conductivity", "The conductivity object is responsible for mean free path and conductivity calculations. It takes a phonons object as a required argument."]], "kaldo.conductivity.Conductivity": [[16, 2, 1, 0, "calculate_conductivity_full", "This calculates the conductivity using the full solution of the space-dependent Boltzmann Transport Equation."], [16, 2, 1, 0, "calculate_mfp_inverse", "This method calculates the inverse of the mean free path for each phonon. The matrix returns k vectors for each mode and has units of inverse Angstroms."], [16, 2, 1, 0, "calculate_scattering_matrix", "Calculate the scattering matrix for phonons."], [16, 3, 1, 0, "conductivity", "Calculate the thermal conductivity per mode in W/m/K"], [16, 3, 1, 0, "diffusivity", "Calculate the diffusivity, for each k point in k_points and each mode."], [16, 3, 1, 0, "mean_free_path", "Calculate the mean_free_path per mode in A"]], "kaldo.conductivity.Conductivity.__init__": [[16, 1, 2, 0, "diffusivity_bandwidth", "(QHGK) Specifies the bandwidth to use in the calculation of the flux operator in the Allen-Feldman model of the thermal conductivity in amorphous systems."], [16, 1, 2, 0, "diffusivity_shape", "(QHGK) Defines the algorithm to use to calculate the diffusivity."], [16, 1, 2, 0, "diffusivity_threshold", "(QHGK) This option is off by default."], [16, 1, 2, 0, "finite_length_method", "(Finite Size) Specifies how to calculate the finite size conductivity."], [16, 1, 2, 0, "is_diffusivity_including_antiresonant", "(QHGK) Defines if you want to include or not anti-resonant terms in diffusivity calculations. Default is False."], [16, 1, 2, "kaldo.conductivity.Conductivity", "kwargs", "The conductivity object is responsible for mean free path and conductivity calculations. It takes a phonons object as a required argument."], [16, 1, 2, 0, "length", "(Finite Size) Specifies the length to use in x, y, z to calculate the finite size conductivity."], [16, 1, 2, 0, "method", "Specifies the method used to calculate the conductivity. 'rta' is relaxation time approximation; 'sc' is self-consistent; 'qhgk' is Quasi-Harmonic Green Kubo; 'inverse' is inversion of the scattering matrix for mean free path."], [16, 1, 2, 0, "n_iterations", "(Self-consistent) Specifies the max number of iterations to set as exit condition in the self consistent conductivity calculation"], [16, 1, 2, 0, "phonons", "Contains all the information about the calculated phononic properties of the system"], [16, 1, 2, 0, "storage", "Defines the type of storage used for the simulation. Default is 'formatted'"], [16, 1, 2, 0, "tolerance", "(Self-consistent) In the self consistent conductivity calculation, it specifies the difference in W/m/K between n and n+1 step, to set as exit/convergence condition."]], "kaldo.conductivity.Conductivity.calculate_conductivity_full": [[16, 1, 2, "kaldo.conductivity.Conductivity.calculate_conductivity_full", "is_using_gamma_tensor_evects", "This calculates the conductivity using the full solution of the space-dependent Boltzmann Transport Equation."]], "kaldo.conductivity.Conductivity.calculate_scattering_matrix": [[16, 1, 2, "kaldo.conductivity.Conductivity.calculate_scattering_matrix", "is_including_diagonal", "Calculate the scattering matrix for phonons."], [16, 1, 2, "kaldo.conductivity.Conductivity.calculate_scattering_matrix", "is_rescaling_omega", "Calculate the scattering matrix for phonons."], [16, 1, 2, "kaldo.conductivity.Conductivity.calculate_scattering_matrix", "is_rescaling_population", "Calculate the scattering matrix for phonons."]], "kaldo.forceconstants": [[17, 0, 1, 0, "ForceConstants", "A ForceConstants class object is used to create or load the second or third order force constant matrices as well as store information related to the geometry of the system."]], "kaldo.forceconstants.ForceConstants": [[17, 4, 1, 0, "cell_inv", "A 3x3 matrix which satisfies AB=I where A is the matrix of cell vectors, I is the identity matrix, and B is the cell_inv matrix."], [17, 2, 1, 0, "elastic_prop", "Return the stiffness tensor (aka elastic modulus tensor) of the system in GPa. This describes the stress-strain relationship of the material and can sometimes be used as a loose predictor for thermal conductivity. Requires the dynamical matrix to be loaded or calculated."], [17, 2, 1, 0, "from_folder", "Create a finite difference object from a folder"], [17, 4, 1, 0, "n_atoms", "Number of atoms in the unit cell"], [17, 4, 1, 0, "n_modes", "The number of possible vibrational modes in the system from a lattice dynamics perspective. Equivalent to 3*n_atoms where the factor of 3 comes from the 3 Cartesian directions."], [17, 4, 1, 0, "n_replicas", "The number of repeated unit cells represented in the system. Equivalent to np.prod(supercell)."], [17, 4, 1, 0, "n_replicated_atoms", "The number of atoms represented in the system. Equivalent to n_atoms * np.prod(supercell)"], [17, 2, 1, 0, "sigma2_tdep_MD", "Calculate the sigma2 value using TDEP and MD data."], [17, 2, 1, 0, "unfold_third_order", "This method extrapolates a third order force constant matrix from a unit cell into a matrix for a larger supercell."]], "kaldo.forceconstants.ForceConstants.__init__": [[17, 1, 2, 0, "atoms", "The atoms to work on."], [17, 1, 2, 0, "distance_threshold", "If the distance between two atoms exceeds threshold, the interatomic force is ignored. Default: None"], [17, 1, 2, 0, "folder", "Name to be used for the displacement information folder. Default: 'displacement'"], [17, 1, 2, 0, "supercell", "Size of supercell given by the number of repetitions (l, m, n) of the small unit cell in each direction. Default: (1, 1, 1)"], [17, 1, 2, 0, "third_supercell", "Same as supercell, but for the third order force constant matrix. If not provided, it's copied from supercell. Default: self.supercell"]], "kaldo.forceconstants.ForceConstants.from_folder": [[17, 1, 2, 0, "distance_threshold", "When calculating force constants, contributions from atoms further than the distance threshold will be ignored."], [17, 1, 2, 0, "folder", "Chosen folder to load in system information."], [17, 1, 2, 0, "format", "Format of force constant information being loaded into ForceConstants object. Default is 'numpy'"], [17, 1, 2, 0, "is_acoustic_sum", "If true, the acoustic sum rule is applied to the dynamical matrix. Default is False"], [17, 1, 2, "kaldo.forceconstants.ForceConstants.from_folder", "only_second", "Create a finite difference object from a folder"], [17, 1, 2, 0, "supercell", "Number of unit cells in each cartesian direction replicated to form the input structure. Default is (1, 1, 1)"], [17, 1, 2, 0, "third_energy_threshold", "When importing sparse third order force constant matrices, energies below the threshold value in magnitude are ignored."], [17, 1, 2, 0, "third_supercell", "Takes in the unit cell for the third order force constant matrix. Default is self.supercell"]], "kaldo.forceconstants.ForceConstants.sigma2_tdep_MD": [[17, 1, 2, 0, "fc_file", "Path to the force constant file."], [17, 1, 2, 0, "md_run", "Path to the MD trajectory file."], [17, 1, 2, 0, "primitive_file", "Path to the primitive cell file."], [17, 1, 2, 0, "supercell_file", "Path to the supercell file."]], "kaldo.forceconstants.ForceConstants.unfold_third_order": [[17, 1, 2, 0, "distance_threshold", "When calculating force constants, contributions from atoms further than the distance threshold will be ignored. Default is self.distance_threshold"], [17, 1, 2, 0, "reduced_third", "The third order force constant matrix. Default is self.third"]], "kaldo.phonons": [[18, 0, 1, 0, "Phonons", "The Phonons object exposes all the phononic properties of a system by manipulation of the quantities passed into the ForceConstant object. The arguments passed in here reflect assumptions to be made about the macroscopic system e.g. the temperature, or whether the system is amorphous or a nanowire. The ForceConstants, and temperature are the only two required parameters, though we highly recommend the switch controlling whether to use quantum/classical statistics (is_classic) and the number of k-points to consider (kpts). For most users, you will not need to access any Phonon object functions directly , but only reference an attribute (e.g. Phonons.frequency). Please check out the examples for details on our recommendations for retrieving, and plotting data."]], "kaldo.phonons.Phonons": [[18, 3, 1, 0, "anharmonic_bandwidth", "Calculate the phonons bandwidth, the inverse of the lifetime, for each k point in k_points and each mode."], [18, 3, 1, 0, "bandwidth", "Calculate the phonons bandwidth, the inverse of the lifetime, for each k point in k_points and each mode."], [18, 3, 1, 0, "eigenvalues", "Calculates the eigenvalues of the dynamical matrix in Thz^2."], [18, 3, 1, 0, "eigenvectors", "Calculates the eigenvectors of the dynamical matrix."], [18, 3, 1, 0, "free_energy", "Harmonic thermal free energy, already Brillouin-zone averaged, returned in eV per mode (ZPE not included)."], [18, 3, 1, 0, "frequency", "Calculate phonons frequency"], [18, 3, 1, 0, "heat_capacity", "Calculate the heat capacity for each k point in k_points and each mode. If classical, it returns the Boltzmann constant in J/K. If quantum it returns the derivative of the Bose-Einstein weighted by each phonons energy c_\\mu = k_B \\frac{\\nu_\\mu^2}{ \\tilde T^2} n_\\mu (n_\\mu + 1), where the frequency \\nu and the temperature \\tilde T are in THz."], [18, 3, 1, 0, "heat_capacity_2d", "Calculate the generalized 2d heat capacity for each k point in k_points and each mode. If classical, it returns the Boltzmann constant in W/m/K."], [18, 3, 1, 0, "isotopic_bandwidth", "Calculate the isotopic bandwidth with Tamura perturbative formula. Defined by equations in DOI:https://doi.org/10.1103/PhysRevB.27.858"], [18, 3, 1, 0, "omega", "Calculates the angular frequencies from the diagonalized dynamical matrix."], [18, 3, 1, 0, "participation_ratio", "Calculates the participation ratio of each normal mode. Participation ratio's represent the fraction of atoms that are displaced meaning a value of 1 corresponds to translation. Defined by equations in DOI: 10.1103/PhysRevB.53.11469"], [18, 2, 1, 0, "pdos", "Calculate the atom projected phonon density of states. Total density of states can be computed by specifying all atom indices in p_atoms. p_atoms input format is flexible: - Providing a list of atom indices will return the single pdos summed over those atoms - Providing a list of lists of atom indices will return one pdos for each set of indices"], [18, 3, 1, 0, "phase_space", "Calculate the 3-phonons-processes phase_space, for each k point in k_points and each mode."], [18, 3, 1, 0, "physical_mode", "Calculate physical modes. Non physical modes are the first 3 modes of q=(0, 0, 0) and, if defined, all the modes outside the frequency range min_frequency and max_frequency."], [18, 3, 1, 0, "population", "Calculate the phonons population for each k point in k_points and each mode. If classical, it returns the temperature divided by each frequency, using equipartition theorem. If quantum it returns the Bose-Einstein distribution"], [18, 3, 1, 0, "sparse_phase", "Sparse phase space tensor for anharmonic interactions."], [18, 3, 1, 0, "sparse_potential", "Sparse potential tensor for anharmonic interactions."], [18, 3, 1, 0, "velocity", "Calculates the velocity using Hellmann-Feynman theorem."], [18, 3, 1, 0, "zero_point_harmonic_energy", "Harmonic zero-point energy, Brillouin-zone averaged, returned in eV per mode."]], "kaldo.phonons.Phonons.__init__": [[18, 1, 2, 0, "broadening_shape", "Defines the algorithm to use for line-broadening when enforcing energy conservation rules for three-phonon scattering. Options: 'gauss', 'lorentz' and 'triangle'. Default: 'gauss'"], [18, 1, 2, 0, "folder", "Specifies where to store the data files. Default: 'output'."], [18, 1, 2, 0, "forceconstants", "Contains all the information about the system and the derivatives of the potential energy."], [18, 1, 2, 0, "g_factor", "It contains the isotopic g factor for each atom of the unit cell. g factor is the natural isotopic distributions of each element. More reference can be found: M."], [18, 1, 2, 0, "grid_type", "Specifies whether the atoms in the replicated system were repeated using a C-like index ordering which changes the last axis the fastest or FORTRAN-like index ordering which changes the first index fastest. Options: 'C', 'F' Default: 'C'"], [18, 1, 2, 0, "include_isotopes", "Defines if you want to include isotopic scattering bandwidths. Default: False."], [18, 1, 2, 0, "is_antisymmetrizing_velocity", "TODO: add more doc here Default: False"], [18, 1, 2, 0, "is_balanced", "Enforce detailed balance when calculating anharmonic properties."], [18, 1, 2, 0, "is_classic", "Specifies if the system is treated with classical or quantum statistics. Default: False"], [18, 1, 2, 0, "is_nw", "Defines if you would like to assume the system is a nanowire. Default: False"], [18, 1, 2, 0, "is_symmetrizing_frequency", "TODO: add more doc here Default: False"], [18, 1, 2, 0, "is_unfolding", "If the second order force constants need to be unfolded like in P."], [18, 1, 2, 0, "iso_speed_up", "Defines if you want to truncate the energy-conservation delta in the isotopic scattering computation."], [18, 1, 2, 0, "kpts", "Defines the number of k points to use to create the k mesh Default: (1, 1, 1)"], [18, 1, 2, "kaldo.phonons.Phonons", "kwargs", "The Phonons object exposes all the phononic properties of a system by manipulation of the quantities passed into the ForceConstant object. The arguments passed in here reflect assumptions to be made about the macroscopic system e.g. the temperature, or whether the system is amorphous or a nanowire. The ForceConstants, and temperature are the only two required parameters, though we highly recommend the switch controlling whether to use quantum/classical statistics (is_classic) and the number of k-points to consider (kpts). For most users, you will not need to access any Phonon object functions directly , but only reference an attribute (e.g. Phonons.frequency). Please check out the examples for details on our recommendations for retrieving, and plotting data."], [18, 1, 2, 0, "max_frequency", "Ignores all phonons with frequency above max_frequency Units: THz Default: None"], [18, 1, 2, 0, "min_frequency", "Ignores all phonons with frequency below min_frequency Units: Thz Default: None"], [18, 1, 2, 0, "storage", "Defines the strategy used to store observables."], [18, 1, 2, 0, "temperature", "Defines the temperature of the simulation Units: K"], [18, 1, 2, 0, "third_bandwidth", "Defines the width of the energy conservation smearing in the phonons scattering calculation."]], "kaldo.phonons.Phonons.pdos": [[18, 1, 2, "kaldo.phonons.Phonons.pdos", "bandwidth", "Calculate the atom projected phonon density of states. Total density of states can be computed by specifying all atom indices in p_atoms. p_atoms input format is flexible: - Providing a list of atom indices will return the single pdos summed over those atoms - Providing a list of lists of atom indices will return one pdos for each set of indices"], [18, 1, 2, "kaldo.phonons.Phonons.pdos", "direction", "Calculate the atom projected phonon density of states. Total density of states can be computed by specifying all atom indices in p_atoms. p_atoms input format is flexible: - Providing a list of atom indices will return the single pdos summed over those atoms - Providing a list of lists of atom indices will return one pdos for each set of indices"], [18, 1, 2, "kaldo.phonons.Phonons.pdos", "n_points", "Calculate the atom projected phonon density of states. Total density of states can be computed by specifying all atom indices in p_atoms. p_atoms input format is flexible: - Providing a list of atom indices will return the single pdos summed over those atoms - Providing a list of lists of atom indices will return one pdos for each set of indices"], [18, 1, 2, "kaldo.phonons.Phonons.pdos", "p_atoms", "Calculate the atom projected phonon density of states. Total density of states can be computed by specifying all atom indices in p_atoms. p_atoms input format is flexible: - Providing a list of atom indices will return the single pdos summed over those atoms - Providing a list of lists of atom indices will return one pdos for each set of indices"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "parameter", "Python parameter"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:class", "1": "py:parameter", "2": "py:method", "3": "py:property", "4": "py:attribute"}, "terms": {"": [9, 14, 16, 17, 18, 19, 21, 22, 23, 28, 29, 30, 32], "0": [10, 12, 15, 16, 17, 18, 21, 23, 29], "0039e5": 23, "01": [17, 30], "011101": 29, "011339": 32, "024204": [19, 32], "025033": 29, "025901": 29, "025902": [19, 32], "031311": 32, "035003": 32, "041013": 29, "043601": 32, "045430": 29, "05": [10, 18, 23], "050902": 29, "054311": 32, "064109": 32, "065403": 32, "07": 30, "081101": 32, "085105": 32, "085322": 18, "085424": 29, "094205": 32, "094302": 29, "094306": [29, 32], "0_": 29, "1": [5, 9, 15, 16, 17, 18, 19, 21, 23, 28, 29, 30, 32], "10": [7, 9, 15, 18, 19, 25, 29], "1000e": 23, "100m": [14, 18], "103": [19, 32], "104160": 32, "105": 32, "1055": 29, "107": 32, "109": 32, "109213": 32, "11": [23, 29, 32], "1101": 29, "1103": [7, 9, 18], "111": [19, 29, 32], "113674": 32, "11469": [9, 18], "116302": 32, "117": 28, "12": [17, 29], "1203": 29, "1211": 29, "124150": 32, "125": 29, "125203": 29, "12581": 29, "12588": 29, "126": 29, "127": [19, 32], "128": [19, 32], "1281": 29, "1295": 29, "13": 29, "131": 29, "134205": [19, 32], "135": 32, "135104": 19, "136": [15, 19, 32], "1369034": 32, "137": 32, "13th": 32, "14": 29, "149": 29, "15": [23, 29], "154506": 32, "1547580": 22, "157": 32, "16": [23, 29], "160": 32, "161": 32, "162": 32, "16209": 29, "17": [29, 32], "1747": 29, "1758": 29, "17w": 29, "18": [23, 29], "1800184": 29, "180901": 29, "1830": 23, "185": 29, "19": [28, 29, 30], "1900233": 29, "192": 29, "1929": 29, "1952": 29, "1954": 29, "195436": 29, "1957": 29, "196": 29, "1970": 29, "1982": 29, "1986": 29, "1988": 23, "1989": 29, "1990": 29, "1993": 29, "1995": 28, "1996": 29, "1d": 29, "1e": [17, 23], "1e23": 23, "2": [2, 5, 15, 16, 17, 18, 19, 21, 23, 26, 29, 30], "20": [15, 23, 29, 30], "200": [10, 18], "2001": 29, "2004": 29, "2007": [23, 29], "2009": [18, 29], "2011": [18, 29], "2012": 29, "2013": [18, 29], "2014": 29, "2015": 29, "2016": 29, "2017": [28, 29], "2018": 29, "2019": [19, 28, 29, 30], "2020": [19, 27, 30], "2021": [19, 30], "2024": 19, "2025": 19, "204": 29, "21": 29, "210": 32, "214303": 29, "217": 23, "22": 29, "220": 29, "2200217": 32, "221101": [19, 32], "224202": 32, "225402": 29, "23": [23, 29], "2307648": 32, "231922": 29, "24": [29, 32], "240402": 32, "2434": 29, "2442": 29, "245901": 32, "249": 32, "25": [15, 23, 29, 32], "259601": 32, "259602": 32, "26": 29, "26a": 29, "27": [7, 18, 29], "271": 29, "273002": [28, 29], "28": 29, "28030": 32, "28040": 32, "29": [28, 29], "2by": 29, "2d": [6, 18, 29, 32], "2n_": 29, "2nd": [17, 23], "2thin": 29, "3": [11, 12, 14, 15, 16, 17, 18, 19, 23, 25, 26, 27, 29, 30, 32], "30": 29, "300": [15, 23, 29], "31": 29, "32": [29, 32], "329": 29, "33": [29, 32], "337": 29, "34": [29, 32], "35": 29, "351": 29, "36": [29, 32], "362": 29, "37": [23, 29], "38": 29, "3813": 29, "3826": 29, "3853": [19, 29], "39": [29, 32], "3925": 32, "3932": 32, "395": 29, "397": 18, "398": 29, "398a": 29, "3d": 17, "3f": 23, "3n": [17, 26], "3rd": [17, 23], "3x3": 17, "4": [15, 19, 23, 29, 30], "40": 29, "4096": 29, "41": 29, "410": 18, "413": 29, "4199": 29, "42": 29, "4228": 29, "43": 29, "432": 23, "44": 29, "440": 21, "45": 29, "46": [29, 32], "465901": [28, 29], "471": 23, "479590": 22, "4799": 23, "48": 29, "495901": 32, "499": 29, "4n_": 29, "5": [15, 17, 19, 23, 29, 32], "503": 29, "5058": 29, "5064": 29, "515": 29, "53": [9, 18, 29], "5566": 29, "5568": 29, "562": 29, "567": 17, "5678": 29, "5684": 29, "570": 29, "586": 29, "59825": 23, "5th": 29, "6": [17, 19, 23, 29, 32], "600": 29, "6109": 29, "6114": 29, "6263": 32, "6269": 32, "6400": 29, "699": 29, "6991": 23, "6n": 17, "7": [23, 29, 32], "73": 29, "7322": 23, "74": 32, "7402": 32, "753": 29, "78734": 23, "8": [15, 23, 29], "80": 29, "809": 29, "813": 29, "83": 18, "84": 29, "85": [23, 29], "8501": 29, "858": [7, 18], "87": [18, 29], "88": 29, "9": [21, 23, 29, 32], "9064": 29, "9073": 29, "91": 29, "93": 29, "95": 23, "96": 32, "97": 32, "A": [14, 16, 17, 18, 19, 23, 26, 28, 29, 30, 32], "ASE": [17, 28, 29, 30], "As": 29, "At": 29, "Be": 17, "Being": 29, "By": 18, "For": [17, 18, 27, 29, 30], "If": [5, 6, 13, 17, 18, 21, 25, 28, 29], "In": [15, 16, 18, 23, 26, 29, 30], "It": [16, 17, 18, 26, 29, 30], "Near": 29, "No": 22, "On": 17, "One": 29, "That": 29, "The": [16, 17, 18, 21, 25, 26, 27, 28, 29, 30], "These": 29, "_": [23, 29, 30, 32], "_dynmat_deriv": 30, "_eigensystem": 30, "_generalized_diffus": 30, "_k": 29, "_nestedsequ": 18, "_ps_and_gamma": 30, "_ps_and_gamma_tensor": 30, "_supportsarrai": 18, "a_": 18, "ab": [17, 26, 32], "abdolhosseini": 29, "about": [16, 18, 29, 30], "abov": [18, 29, 30], "ac": 32, "acceler": [15, 23, 32], "access": [17, 18, 21], "accord": 18, "accur": 32, "accuraci": 32, "aci": 22, "acknowledg": 28, "acoust": [17, 29], "across": [29, 30, 32], "act": 29, "acta": 32, "activ": [15, 25, 30], "actual": 17, "ad": [23, 25], "adam": 29, "add": [18, 25], "adjust": 18, "adopt": 29, "adv": 32, "advanc": [18, 28, 29, 32], "advantag": [26, 29], "af": 16, "affect": 18, "after": [17, 21, 30], "against": 18, "agn": 32, "ahead": 21, "ahlawat": 32, "ahmadian": 32, "aidan": 23, "aim": 17, "aka": 17, "akirmak": 32, "al": [18, 32], "ala": 32, "alain": 32, "ald": [19, 23, 26, 29], "alder": 29, "aldo": [15, 23], "alex": 32, "alexandro": 32, "alfredo": [19, 32], "algebra": 26, "algorithm": [16, 18, 26, 28], "align": 32, "alireza": 32, "all": [10, 12, 16, 17, 18, 25, 29, 30], "allaei": [29, 32], "allen": [16, 18, 29], "alloi": [19, 29, 32], "almabt": 29, "aln": 32, "along": [17, 18, 29], "alo\u00ef": 32, "alpha": [29, 30], "alreadi": [17, 18], "also": [17, 18, 25, 26, 29], "altarawi": 29, "alumina": 32, "alvarinha": 32, "alzina": 32, "am": 32, "amobi": 32, "amorph": [16, 17, 18, 19, 26, 31, 32], "amorphous_silicon_tersoff_lammp": 15, "amount": [17, 29], "amporph": 15, "an": [16, 17, 18, 21, 29, 30, 32], "analog": 29, "analys": 32, "analysi": [29, 32], "ander": 32, "andrea": 32, "andreussi": [28, 29], "andrew": 32, "ang": 32, "angela": 32, "angstrom": [16, 17, 23], "angular": [8, 18], "anharmon": [17, 18, 19, 28, 29, 32], "anharmonic_bandwidth": 18, "ani": [0, 1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 18, 19, 28, 30], "anisotrop": 29, "annalen": 29, "annihil": 29, "anomal": 32, "anoth": 29, "anti": 16, "antonio": 32, "anufriev": 32, "api": 31, "api_forceconst": 17, "append": 21, "appl": [18, 19, 32], "appli": [17, 29, 30], "applic": [29, 32], "approach": [17, 19, 23, 29, 32], "approx": 18, "approxim": [16, 17, 18, 23, 29], "apt": 23, "ar": [5, 9, 12, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30], "aradi": 29, "architectur": [29, 31], "arguemnt": 18, "argument": [16, 17, 31], "arka": 32, "armstrong": 29, "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 23], "arregui": 32, "arsenen": 29, "arsenid": 29, "arxiv": 31, "ase": [17, 23, 29], "ase_espresso_command": 30, "asheghi": 29, "assign": 21, "associ": 29, "assum": [17, 18, 29], "assumpt": [18, 23, 29], "athomp": 23, "atom": [7, 9, 10, 17, 18, 23, 26, 28, 29, 30, 32], "atom_prim": 17, "atomist": [19, 29, 32], "attribut": [17, 18], "automat": 21, "avail": [16, 26, 30], "averag": [17, 18], "aviram": 32, "avoid": 18, "axi": [16, 18, 23, 29], "b": [17, 18, 19, 21, 23, 28, 29, 32], "ba8cu16as30": 32, "bachelet": 29, "back": [17, 23], "bai": 32, "balanc": 18, "ballist": [16, 29], "band_width_flatten": 23, "bandwidth": [0, 7, 10, 15, 16, 18, 23, 30], "baol": 32, "barbalinardo": [19, 27, 29, 32], "barn": 29, "baroni": [19, 28, 29, 32], "base": [19, 29, 32], "bashrc": 25, "basi": [15, 23, 29], "basic": [17, 18, 31], "batista": 32, "batteri": 29, "baumgartn": 29, "becaus": [17, 18, 26, 29], "becom": [18, 29], "been": 29, "befor": 17, "beginn": 18, "being": 17, "below": [17, 18, 26, 29], "benenti": 32, "berglund": 18, "bernardi": 32, "bescond": 32, "best": [25, 26], "beta": [23, 29, 30], "between": [16, 17, 18, 29], "beyond": [29, 32], "bin": [23, 25, 30, 32], "binari": [17, 27, 30], "bind": 26, "bing": 32, "bingq": 32, "bingyang": 32, "birner": 29, "black": 29, "blomqvist": [28, 29], "blue": 29, "bo": 32, "bockowski": 32, "bold": [15, 23], "boldsymbol": 29, "boltzmann": [5, 6, 16, 18, 29, 32], "bonel": 32, "bool": [12, 16, 17, 18], "boolean": 18, "boost": 32, "bori": 32, "born": 29, "boron": 29, "bose": [5, 13, 18, 29], "both": [18, 29], "bottleneck": [17, 26], "boukari": 32, "bound": 18, "boundari": 17, "branch": 21, "break": 29, "brillouin": [18, 29], "bristol": 29, "broaden": [15, 16, 18], "broadening_shap": [15, 18], "broido": 29, "brumboiu": 32, "brumm": [28, 29], "brun": 32, "bsd": 27, "bte": [19, 26, 29], "bu": 32, "buffer": 18, "build": [16, 17, 18, 21, 22, 23, 29], "bulk": [17, 29], "bunau": [28, 29], "buongiorno": 28, "burger": 29, "byte": 18, "c": [15, 17, 18, 23, 27, 28, 29, 32], "c_": [5, 18, 23, 29], "c_ijkl": 17, "c_v": [5, 18], "cai": 32, "calandra": [28, 29], "calat": 29, "calc": 17, "calcul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 26, 29, 30, 31, 32], "calculate_conductivity_ful": 16, "calculate_mfp_invers": 16, "calculate_scattering_matrix": 16, "calculato": 17, "call": 17, "can": [10, 15, 17, 18, 23, 25, 26, 29, 30], "cannot": 29, "cao": 32, "capabl": 29, "capac": [5, 6, 17, 18, 23, 29], "cappai": 32, "captur": [15, 23, 29], "car": [28, 29], "carbon": [17, 19, 29, 32], "cardona": 29, "carnimeo": [28, 29], "caro": 32, "carret": 29, "carrier": [29, 32], "cartesian": [17, 29], "case": [16, 17, 29, 31, 32], "castellano": 32, "castelli": [28, 29], "cavazzoni": [28, 29], "ccach": 23, "cd": [23, 25, 30], "cdot": [18, 29], "cell": [17, 18, 23, 29], "cell_inv": 17, "cepellotti": [29, 32], "ceram": 32, "cerasoli": 32, "ceresoli": [28, 29], "ceriotti": 32, "challeng": 29, "chang": [17, 18, 25, 30, 31, 32], "changi": 32, "channel": 32, "chao": 32, "chaput": 29, "charg": 32, "charl": 30, "chavez": 32, "cheaito": 29, "check": [15, 17, 18], "checkout": 21, "chem": [18, 29, 32], "chemic": 29, "chemistri": 29, "chen": [19, 27, 29, 32], "cheng": 32, "chernatynskii": 29, "chi": 29, "chi_": 29, "choic": 18, "chosen": 17, "christ": 32, "christensen": [28, 29], "cielecki": 32, "cimento": 32, "citat": [23, 29], "cite": [28, 31], "clarifi": 18, "class": [16, 17, 18], "classic": [5, 6, 13, 15, 23, 29, 31], "classmethod": 17, "clathrat": 32, "claudio": 32, "claus": 27, "clementi": 29, "clivia": 32, "clone": [15, 21, 23, 25], "close": 18, "cluster": 32, "cmake": 23, "cococcioni": [28, 29], "code": [21, 26, 31], "coeffici": 29, "coher": 32, "colab": [15, 23], "collabor": 21, "collect": 29, "collin": 32, "colonna": [28, 29], "color": [19, 32], "com": [15, 23, 25], "combin": [29, 32], "come": 17, "comment": 32, "commit": 21, "common": 32, "commun": [19, 22, 26, 28, 29, 32], "comp": 28, "compact": 29, "compar": [29, 32], "comparison": 29, "competitor": 29, "compil": [17, 23, 30], "complex": [17, 18, 32], "composit": 18, "compound": 32, "comprehens": [19, 32], "compress": [26, 29, 32], "compressingsens": 26, "comput": [10, 15, 18, 21, 22, 23, 26, 29, 30, 32], "computation": 29, "concentr": 32, "concept": [18, 31], "concret": 18, "cond": 29, "conda": [21, 25, 30], "conden": [28, 32], "condens": [28, 29], "condit": [16, 18, 27], "conduct": [15, 17, 18, 19, 29, 30, 31, 32], "conductivity_": 30, "conductivity_per_mod": 16, "conductor": 32, "confer": 32, "config": [17, 23], "connect": 29, "conserv": [18, 29], "consid": [18, 29], "consider": 17, "consist": [16, 23, 26, 29, 30], "constant": [5, 6, 15, 17, 18, 26, 28, 29, 30], "construct": 17, "contain": [16, 17, 18], "content": [15, 17, 23], "contract": 29, "contribut": [17, 26, 29, 31], "contributor": 23, "control": [15, 17, 18, 23], "conveni": 29, "convent": [18, 30], "converg": [16, 18, 19, 32], "convers": 29, "cookiecutt": 21, "coordin": 30, "copi": [15, 17], "copyright": 31, "core": 32, "correct": 18, "correctli": [25, 29], "correl": 29, "correspond": [9, 16, 18, 29], "corso": [28, 29], "costheta0": 23, "could": 17, "coulter": 32, "coupl": [6, 18, 32], "cp": 15, "cpu": 26, "crawford": 29, "creat": [17, 18, 21, 25, 30], "creation": 29, "crystal": [19, 29, 32], "crystallin": [19, 26, 29, 32], "cs3bi2i6cl3": 32, "csanyi": 32, "cubic": 18, "cui": 29, "cum": 29, "cumul": [15, 23, 29], "cumulative_cond": 23, "cumulative_cond_c": [15, 23], "current": [17, 29], "custom": 17, "cutoff": 29, "cv_1d": 23, "cycl": 26, "c\u00e9line": 32, "d": [17, 19, 21, 23, 28, 29], "d_": 29, "daisenberg": 29, "dal": [28, 29], "daniel": 32, "data": [17, 18, 22], "date": 23, "david": [19, 27, 32], "dbuild_shared_lib": 23, "de": [28, 29], "deal": 29, "debug": 21, "deby": [17, 18], "decoupl": 29, "decreas": 29, "deep": 32, "def": 23, "default": [16, 17, 18, 21], "defaut": 18, "defect": 32, "defin": [7, 9, 12, 16, 18, 23, 29, 30], "definit": 29, "deinzer": 29, "del": 32, "deloc": 29, "delta": [18, 29], "delta_": 29, "delta_shift": [17, 23], "deluga": [28, 29], "demonstr": 18, "dens": [18, 30], "densifi": 32, "densiti": [10, 18, 29, 32], "depend": [16, 17, 21, 25, 29, 30, 32], "deploi": 21, "der": 29, "deriv": [5, 17, 18, 29, 30, 32], "describ": [17, 18], "descript": 29, "design": 26, "detail": [15, 18], "determin": 29, "dettori": 32, "dev": 23, "develo": 25, "develop": [26, 32], "devis": 29, "devyatykh": 29, "dfpt": 30, "dft": [26, 29], "dftb": 29, "dhruv": 32, "di": 32, "diag": 23, "diagon": [8, 18, 29], "diamond": [17, 31, 32], "diblock": 32, "diebold": 32, "diehrand": 29, "differ": [16, 17, 18, 21, 23, 26, 29, 30], "difficult": 18, "diffus": [16, 29, 30], "diffusivity_bandwidth": [16, 30], "diffusivity_shap": 16, "diffusivity_threshold": [16, 30], "diffuson": 32, "dimension": [29, 32], "diod": 32, "direct": [10, 15, 17, 18, 23, 26, 29], "directli": [18, 29, 30], "discard": 29, "discuss": [21, 29], "disord": [19, 29, 32], "dispers": [17, 23, 32], "displac": [9, 17, 18, 29], "disregard": 29, "distanc": [17, 30], "distance_threshold": 17, "distasio": 28, "distinct": 29, "distort": 32, "distribut": [13, 18, 29], "disturb": 29, "divid": [13, 17, 18], "dlammps_except": 23, "dlp4": 17, "dmliap_enable_python": 23, "do": [17, 18, 29], "doc": [17, 18], "document": [17, 30], "doe": 17, "doesn": [18, 30], "doi": [7, 9, 18], "domain": 32, "domin": [29, 32], "don": [17, 28], "donadio": [19, 27, 29, 32], "done": [17, 23, 25], "dong": [19, 32], "dot": 29, "down": 29, "dpkg_kspace": 23, "dpkg_manybodi": 23, "dpkg_phonon": 23, "dpkg_python": 23, "dpython_execut": 23, "drigo": 32, "driven": 32, "dtype": 18, "du": 32, "due": 29, "dump": 17, "du\u0142ak": [28, 29], "dylan": [19, 32], "dyn": 17, "dynam": [2, 3, 8, 17, 18, 19, 26, 28, 29, 30, 32], "e": [18, 21, 23, 28, 29, 30, 32], "e20517": 32, "each": [0, 1, 5, 6, 9, 10, 11, 13, 16, 17, 18, 23, 29, 30], "ecem": 32, "echo": [23, 25], "edit": [15, 23, 26], "effect": [17, 19, 29, 32], "effici": [19, 32], "ehrenreich": 29, "eigenvalu": [18, 29, 30], "eigenvector": [18, 29, 30], "einstein": [5, 13, 18, 29], "einsum": [15, 23, 29], "either": [17, 21], "el": 32, "elast": [17, 19, 32], "elastic_prop": 17, "electrolyt": 32, "electron": [29, 32], "element": [18, 23, 29], "emigdio": 32, "empir": [17, 26], "enabl": [15, 23, 25, 26], "energi": [5, 17, 18, 29, 32], "enforc": 18, "engin": 29, "enhanc": 29, "enrich": 29, "enrico": 32, "ensur": [18, 21, 30], "entri": 23, "env": 21, "environ": [21, 25, 26, 28, 29, 30], "equal": [18, 29], "equat": [7, 9, 16, 18, 32], "equilibrium": [17, 29, 32], "equipartit": [13, 18], "equival": [17, 18, 29], "erhart": [28, 29, 32], "erik": [28, 32], "eriksson": [28, 29, 32], "error": 17, "esben": 32, "eskm": [15, 17], "especi": [29, 30], "espresso": [17, 28, 29], "essenti": 23, "et": [18, 32], "eta": 29, "eta_": 29, "etc": 17, "ev": [17, 18, 23, 30], "evalu": 29, "even": 29, "event": 29, "ex": 29, "exampl": [15, 16, 17, 18, 25, 28, 29, 30], "exce": 17, "except": [18, 30], "exchang": 29, "execut": 17, "exit": 16, "expand": 29, "expans": 32, "expens": 29, "explan": [17, 24], "explicitli": 17, "exploit": [17, 29], "explor": [17, 22], "export": [25, 30], "expos": 18, "express": [21, 29], "extend": 29, "extra": 25, "extract": [28, 29, 32], "extrapol": [17, 19, 32], "f": [18, 28, 29, 32], "fachen": 32, "factor": [17, 18], "fals": [15, 16, 17, 18, 23], "fan": [19, 32], "fang": 32, "far": 17, "fast": [28, 32], "faster": [17, 30], "fastest": 18, "fc": [17, 29, 30], "fc_file": 17, "fcc": 29, "fd": 23, "featur": 31, "federico": 32, "fedorova": 32, "feldman": [16, 29], "fellowship": 22, "fermi": 29, "ferretti": [28, 29], "ferroelectr": 32, "few": 17, "feynman": [14, 18], "figur": [15, 23], "file": [15, 18, 29, 30], "filenam": 17, "filepath": 23, "film": 29, "final": [18, 21, 26, 29, 30], "finish": [18, 23], "finit": [16, 17, 19, 23, 29, 30, 32], "finite_length_method": 16, "fiorentino": [19, 32], "first": [12, 17, 18, 19, 26, 29, 30, 32], "flag": 15, "flatten": [15, 23], "flexibl": [10, 17, 18, 29], "float": [16, 17, 18, 26], "flori": [28, 29], "florian": [19, 32], "flow": 19, "fluid": 29, "flux": 16, "flux_alpha": 30, "flux_dens": 30, "flux_spars": 30, "folder": [15, 17, 18, 23, 24, 29, 30], "folkner": [19, 32], "follow": [17, 18, 21, 25, 27, 29, 30], "fontsiz": [15, 23], "fontweight": [15, 23], "forc": [15, 17, 18, 26, 28, 29, 30], "force_const": [17, 29], "force_constants_2nd": 17, "force_constants_3rd": 17, "forceconst": [15, 18, 23, 29, 31], "forceconstants_config": 23, "forcefield": 26, "forget": 28, "fork": 21, "form": [17, 27, 29], "formal": 29, "format": [10, 15, 16, 18, 21, 23, 30], "formul": 32, "formula": [7, 18, 19], "fortran": 18, "found": [17, 18], "foundat": 32, "four": [16, 32], "fourier": [29, 32], "fowler": 32, "frac": [5, 17, 18, 29, 30], "fraction": [9, 18], "frame": 17, "frameon": [15, 23], "framework": [16, 29, 32], "francesc": 32, "frank": 32, "fransson": [28, 29, 32], "fratesi": [28, 29], "frauenheim": 29, "fredrik": [28, 32], "free": [16, 18, 26, 29], "free_energi": 18, "freq": 23, "freq_ful": 23, "freq_reshap": 23, "frequenc": [5, 8, 10, 12, 13, 15, 17, 18, 23, 29, 30], "frii": [28, 29], "from": [8, 15, 17, 18, 19, 21, 23, 25, 29, 30, 32], "from_fold": [15, 17, 29], "front": 32, "frozen": 17, "fr\u00e9d\u00e9ric": 32, "fugallo": [28, 29], "full": [16, 17, 26, 29, 32], "full_cond": 23, "funct": 32, "function": [17, 18, 29], "fundament": [19, 29], "further": 17, "g": [18, 19, 21, 28, 29, 30, 32], "g_": 29, "g_factor": 18, "galli": 29, "gamma": [15, 18, 23, 29], "gamma_": 29, "ganos": 32, "gao": 32, "gase": 29, "gass": 29, "gatewai": 29, "gauss": [16, 18], "gayatri": 32, "ge": 32, "gebauer": [28, 29], "gener": [6, 17, 29, 31, 32], "geneviev": 32, "geoff": 32, "geometri": 17, "gerald": 32, "gerstmann": [28, 29], "get": [17, 18, 21, 23], "giannozzi": [28, 29], "gibin": 29, "gigli": 32, "gironcoli": [28, 29], "git": [15, 21, 23, 25], "github": [15, 21, 23, 25], "giuliano": 32, "giusepp": [19, 27, 32], "giustino": [28, 29], "given": [17, 18, 29], "glass": [19, 29, 32], "glassi": 32, "glorieux": 32, "goe": 18, "gohda": 29, "golden": 29, "good": 17, "goodson": 29, "googl": [15, 23], "gordon": 29, "gorni": [28, 29], "gov": 23, "govern": 32, "gpa": 17, "gpu": [15, 23, 26, 32], "gpumd": [19, 32], "gradient": 29, "graf": 29, "graham": 32, "grai": 29, "grand": 29, "grant": 22, "graphen": [29, 32], "graphic": 32, "graphit": 29, "grasselli": 32, "gratefulli": 22, "great": 28, "greater": 18, "greatli": 17, "green": [16, 19, 32], "grid": [15, 18, 23, 29], "grid_typ": 18, "group": [23, 29], "grove": [28, 29], "gu": 32, "guang": 32, "guanzhi": 32, "guillermo": 32, "guo": 32, "gurunathan": 32, "gusev": 29, "h": [28, 29], "ha": [16, 21, 29], "hafnia": 32, "haiguang": 32, "haikuan": [19, 32], "half": 32, "halid": 32, "hamann": 29, "hammer": [28, 29], "han": 32, "handl": 18, "hanu": 32, "hao": 32, "haoyu": 32, "hard": 29, "hargu": [28, 29], "harmon": [16, 17, 18, 19, 30, 32], "harper": 32, "harrison": 29, "harvest": 29, "hash": 21, "have": [17, 21, 25, 29, 30], "hbar": 29, "hdf5": [16, 18, 30], "he": 29, "head": 29, "heat": [5, 6, 17, 18, 19, 23, 29, 32], "heat_capac": [18, 23, 30], "heat_capacity_2d": 18, "hekai": 32, "hellman": 32, "hellmann": [14, 18], "help": [17, 18, 30], "henc": 29, "here": [16, 17, 18, 27, 29], "herm": [28, 29], "herv\u00e9": 32, "heterostructur": 29, "heusler": 32, "hicham": 32, "high": [28, 29, 30, 32], "highli": [18, 29, 32], "hilger": 29, "hiphiv": [17, 26, 28, 29], "hisao": 32, "hit": 17, "hollow": 32, "hongao": 32, "hongxia": 32, "hoover": 29, "hope": 26, "horton": 32, "hourahin": 29, "how": [16, 17, 24, 29, 31, 32], "howev": [17, 18, 29], "http": [7, 15, 18, 23, 25], "hug": 29, "human": 30, "hundr": 17, "hunt": 32, "hybrid": 32, "hydrodynam": [19, 29, 32], "hypothesi": 29, "i": [10, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 32], "idea": [17, 18], "ident": [17, 29], "ieee": 32, "ifc": [23, 26, 29, 31], "ifc2": 17, "ignor": [17, 18, 29], "ii": 29, "il": 29, "illustr": [26, 29, 30], "imagin": 18, "imidazol": 32, "impact": [29, 32], "implement": [19, 26, 29], "import": [15, 17, 18, 23, 29, 30], "import_control_fil": 17, "inaugur": 29, "includ": [16, 17, 18, 29], "include_isotop": 18, "increas": [17, 18, 29], "increasingli": 18, "independ": 29, "index": [18, 29, 30], "indic": [10, 18, 29], "individu": 30, "induc": 32, "inequ": 18, "infer": 21, "infil": 17, "infin": 16, "info": 30, "inform": [16, 17, 18, 29, 31], "infrastructur": 22, "infti": 29, "ing": 28, "initi": [17, 18], "initio": [26, 32], "initioapproach": 29, "inorgan": [29, 32], "input": [10, 18, 23, 29, 30], "input_data": 29, "insight": 32, "inspir": 32, "instal": [21, 30, 31], "instanc": [16, 17], "institut": [22, 29], "insul": 29, "int": [16, 17, 18, 23, 32], "integr": [19, 26, 32], "intend": 18, "inter": 29, "interact": [17, 18, 29, 32], "interatom": [17, 26, 30, 32], "interfac": [26, 31, 32], "intermedi": 18, "intern": [29, 30, 32], "intrins": 29, "introduc": 29, "inv_cond_matrix": 23, "invari": 32, "invers": [0, 1, 16, 18, 23, 26, 29], "invert": 29, "invest": 22, "investig": 32, "io": 17, "ionic": 32, "irreduc": 29, "irrevers": 29, "is_acoustic_sum": 17, "is_antisymmetrizing_veloc": 18, "is_balanc": 18, "is_class": [15, 18, 23], "is_diffusivity_including_antireson": 16, "is_harmon": 17, "is_including_diagon": 16, "is_nw": [18, 30], "is_rescaling_omega": 16, "is_rescaling_popul": 16, "is_symmetrizing_frequ": 18, "is_unfold": 18, "is_using_gamma_tensor_evect": 16, "isaeva": [19, 29], "iso_speed_up": 18, "isotop": [7, 18, 19, 29], "isotopic_bandwidth": 18, "isotopic_bw": [7, 18], "isotrop": 29, "issu": [21, 30], "iter": [16, 29], "its": [17, 29], "iupac": 18, "iwanowski": 32, "j": [5, 18, 19, 23, 28, 29, 32], "j_": 29, "jackson": 32, "jacobsen": [28, 29], "jain": 29, "jamet": 32, "japan": 29, "jeffrei": 32, "jen": [28, 29], "jennif": 32, "jensen": [28, 29], "jha": 29, "jia": [28, 29, 32], "jianbin": 32, "jiang": 32, "jianshi": 32, "jie": 32, "jielan": 32, "jing": 29, "jingj": 32, "jinlong": 32, "johansson": 32, "johra": 32, "jonathan": 32, "journal": [28, 29], "jphy": 32, "jr": [28, 29], "juli": 30, "junction": 32, "junfu": 32, "junji": 32, "junsoo": 32, "just": 17, "j\u00f6rg": 32, "k": [0, 1, 5, 6, 11, 13, 15, 16, 23, 26, 28, 29, 30, 31], "k_b": [5, 18, 29], "k_label": 23, "k_point": [0, 1, 5, 6, 11, 13, 16, 18], "kaasbjerg": [28, 29], "kachoei": 32, "kaldo": [15, 16, 18, 19, 21, 23, 25, 26, 28, 29, 30], "kamil": 32, "kappa": [15, 23, 30], "kappa_": 29, "kappa_inv_cum_freq": 23, "kappa_inv_per_mod": 23, "kappa_qhgk_cum_freq": [15, 23], "kappa_qhgk_per_mod": 15, "kappa_rta_cum_freq": 23, "kappa_rta_per_mod": 23, "kappa_sc_cum_freq": 23, "kappa_sc_per_mod": 23, "karasawa": 32, "katcho": 29, "katr": 29, "kawamura": [28, 29], "kbenli": 29, "ke": 32, "keep": 17, "keep_al": 23, "kermod": [28, 29], "keyword": 18, "kieslich": 29, "kim": 29, "kinet": [29, 32], "kinetischen": 29, "kiril": 32, "kitchin": [28, 29], "kl": 29, "kliavinek": 32, "knoop": [19, 32], "know": 18, "known": 18, "ko": [28, 29], "kohn": 29, "kokalj": [28, 29], "kolsbjerg": [28, 29], "kovnir": 32, "kozinski": 32, "kpoint": 30, "kpt": [18, 23, 29], "kremer": 29, "kristallen": 29, "krylov": 29, "ksi": 29, "ksk": 29, "ktn": 32, "ku": 29, "kubal": [28, 29], "kubo": [16, 19, 32], "kumar": 29, "kuryliuk": 32, "kwarg": [16, 18], "k\u00fc\u00e7\u00fckbenli": 28, "l": [17, 19, 28, 29, 32], "la": [28, 29, 32], "label": [15, 23], "lack": 18, "ladd": 29, "lambda": [16, 29], "lambda1": 23, "lambda2": 23, "lambda3": 23, "lambda_": 29, "lammp": [17, 26, 28, 29], "lammps_input": 23, "lammpslib": [17, 23, 30], "lammpsrun": 17, "lantao": 32, "larg": [15, 18, 29], "larger": 17, "larsen": [28, 29], "last": [18, 21, 25, 29], "latest": 21, "latter": 29, "lattic": [17, 18, 19, 28, 29, 32], "launch": 17, "law": 29, "layer": [29, 32], "lazzeri": [28, 29], "lead": [18, 32], "learn": [17, 26, 28, 29, 32], "lebedev": 32, "left": 29, "legend": [15, 23], "lei": 32, "lem": 29, "length": [16, 18], "lepri": 32, "leq": 18, "less": 18, "lett": [19, 32], "letter": 29, "level": 30, "lf": 15, "li": [29, 32], "li3clo": 32, "li3ps4": 32, "lian": 29, "liang": 32, "lib": 30, "libari": 23, "liben": 32, "libopenmpi": 23, "librari": [17, 26, 28, 29], "lifetim": [0, 1, 17, 18, 26, 29, 30, 32], "like": [17, 18, 26, 29, 30], "limit": [16, 29, 31, 32], "lin": 32, "lindsai": [29, 32], "line": [18, 21, 23, 25, 29], "linear": [26, 29, 32], "lingyu": 32, "linhua": 32, "liquid": 32, "list": [10, 17, 18], "lithium": 29, "liu": 32, "live": 21, "livi": 32, "ll": [17, 21], "lmpcmd": [17, 23], "load": 31, "loc": [15, 23], "local": [19, 29, 32], "locat": [17, 24], "locon": 32, "log": [17, 23], "log_fil": 23, "long": 29, "longer": 29, "look": [17, 21, 29], "loos": 17, "lorentz": [16, 18], "lorentzian": 29, "lorenzo": 32, "lose": 17, "low": 18, "lu": 32, "luca": 32, "lundgren": [19, 27, 32], "luo": 32, "lv": 32, "lysgaard": [28, 29], "m": [6, 15, 16, 17, 18, 23, 28, 29, 30, 32], "m_": 29, "m_im_": 29, "maa": [15, 23], "machin": [17, 26, 28, 29, 32], "macromolecul": 32, "macroscop": 18, "made": [18, 29], "madsen": 29, "magnet": 29, "magnitud": [17, 18], "mai": [17, 18, 21, 29], "main": [21, 23, 26], "make": [18, 21, 23, 25, 30], "malorni": 29, "mangtani": 32, "mani": [17, 21, 30], "manipul": 18, "manual": 17, "manunza": 32, "manybodi": 30, "mao": 32, "map": 29, "marc": 32, "marco": 32, "marcolongo": 29, "marianna": 32, "marin": 29, "markers": 15, "markoff": 29, "maronsson": [28, 29], "marsili": [28, 29], "marti": 32, "marzari": [28, 29], "masahiro": 32, "mass": [17, 29, 30, 32], "match": 30, "mater": 32, "materi": [17, 18, 19, 29, 30, 32], "materiom": 29, "math": 29, "mathbf": 29, "mathrm": 29, "matplotlib": [15, 23], "matric": 17, "matrix": [2, 3, 8, 16, 17, 18, 26, 29, 30], "matter": [28, 29, 32], "matthew": 32, "matthia": 32, "matthieu": 32, "mauri": [28, 29], "max": [15, 16, 23], "max_freq": 30, "max_frequ": [12, 18], "maxson": [28, 29], "mcgaughei": 29, "mckelvei": 16, "md": [17, 19], "md_run": 17, "mean": [9, 16, 18, 23, 29], "mean_free_path": [16, 30], "measur": [29, 30], "mechan": [29, 32], "mehdi": 32, "meli": 32, "melt": [17, 29], "memori": [16, 18, 30], "meng": 32, "merg": 21, "mesh": [18, 29], "met": 27, "meta": 21, "metal": [23, 29], "method": [15, 16, 17, 18, 23, 26, 29, 30, 32], "metrologi": 32, "mfp": 16, "michal": 32, "michel": 32, "microscop": 29, "microscopi": 32, "miguel": 32, "mike": 32, "min": 15, "min_freq": 30, "min_frequ": [12, 18], "mingfa": 32, "mingo": 29, "minim": [17, 18, 29], "mixtur": 23, "mk": 23, "mkdir": [23, 25], "mm": 16, "mo": [23, 29], "mod": 29, "modal": [29, 32], "mode": [0, 1, 5, 6, 9, 11, 12, 13, 16, 17, 18, 19, 26, 29, 30, 32], "model": [16, 19, 29, 32], "model2": 17, "model3": 17, "modern": [26, 29], "modif": [18, 27], "modifi": 32, "modul": [31, 32], "moduli": [19, 32], "modulu": 17, "moir\u00e9": 32, "molecul": 30, "molecular": [21, 22, 26, 28, 29, 32], "molssi": 22, "momentum": 29, "monograph": 29, "moran": 29, "more": [15, 17, 18, 23, 27, 29, 30], "morten": 32, "mortensen": [28, 29], "most": 18, "move": 17, "mpi": 30, "mpirun": 30, "mr": 32, "ms2": 29, "mu": [5, 18, 23, 29], "much": 29, "multi": 32, "multicompon": 29, "multidimension": 32, "multipl": [23, 26], "multithread": 26, "n": [15, 16, 17, 23, 25, 26, 28, 29, 32], "n_": [5, 18, 29, 30], "n_a": 30, "n_atom": [17, 18], "n_iter": [15, 16, 23], "n_k": [26, 29], "n_k_point": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 23], "n_kv": 29, "n_mode": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18], "n_phonon": [2, 3, 15, 18, 23], "n_point": [10, 18], "n_project": [10, 18], "n_replica": 17, "n_replicated_atom": 17, "n_unit_cel": [14, 18], "na": 29, "nabla": 29, "nabla_": 29, "nakajima": 29, "nakamura": 32, "name": [17, 21, 29], "nano": 29, "nanopor": 32, "nanoscal": [29, 32], "nanostructur": 32, "nanosystem": 32, "nanotechnologi": 29, "nanotheorygroup": [15, 25], "nanotub": [19, 32], "nanowir": [18, 29, 32], "naoyuki": 32, "nap": 32, "nardelli": [28, 29], "nash": 29, "nat": 19, "natalya": 32, "nativ": 26, "natru": 32, "natur": [18, 29], "nbsphinx": 29, "nearest": 29, "nearli": 29, "need": [17, 18, 21, 23, 29, 30], "neg": 30, "neglect": 17, "neighbor": 29, "neither": 17, "neuefeind": 32, "neuroevolut": 32, "new": [17, 21, 25, 26], "next": [25, 30, 32], "nguyen": [28, 29], "nicer": 17, "nichola": [19, 27, 32], "nilg": 29, "nissila": 32, "nk": 26, "nojeh": 32, "nomura": 32, "non": [12, 18, 29, 32], "none": [10, 16, 17, 18], "norm": 29, "normal": [9, 17, 18, 29], "note": [17, 21], "notebook": [15, 23], "notic": 17, "now": [17, 29], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 30], "npj": 32, "npy": 17, "npz": 17, "nsf": [22, 29], "nu": [5, 15, 18, 23], "nu_": [5, 18], "number": [16, 17, 18, 21, 26], "numer": 32, "numpi": [15, 16, 17, 18, 23, 26, 30], "nuovo": 32, "nv": 29, "o": [17, 28, 29], "object": [16, 17, 18, 29, 30], "observ": [18, 30], "obtain": 29, "occasion": 30, "occur": 29, "octob": 30, "off": [16, 29], "offer": 17, "often": 29, "oleg": 32, "oll": 32, "olsen": [28, 29], "omega": [18, 29, 32], "omega_": 29, "omini": 29, "onc": 29, "one": [10, 16, 18, 23, 29, 30], "ones": 23, "onli": [17, 18, 29, 30], "only_second": 17, "onto": 29, "open": [21, 22, 26, 28, 29], "openbt": 32, "openmpi": 23, "oper": [16, 17, 26, 29], "oppenheim": 29, "opt_einsum": 29, "optim": [26, 29], "option": [16, 17, 18, 30], "orbit": 29, "order": [15, 17, 18, 23, 28, 29, 30, 32], "org": [7, 18], "organ": 32, "origin": [21, 29], "ostap": 32, "otero": 28, "other": [23, 31], "otherwis": [18, 21], "ott": 29, "oup": 29, "our": [17, 18], "out": [15, 18, 29, 30], "outlin": 16, "output": [18, 31], "outsid": [12, 18], "ouyang": [29, 32], "over": [10, 16, 18, 29], "overestim": 29, "overhead": 17, "overview": 31, "oxford": 29, "oxid": 32, "p": [14, 16, 17, 18, 25, 28, 29, 32], "p_atom": [10, 18], "packag": [17, 23, 25, 26, 28, 29, 30], "page": [17, 31], "pair": 17, "pair_coeff": [17, 23], "pair_styl": [17, 23], "pand": 29, "paolo": [19, 32], "paper": [23, 31], "parallel": [28, 29], "paramet": [16, 17, 18, 23, 29, 30], "parameter": 23, "parenthesi": 30, "park": 32, "part": [17, 26], "partial": 29, "particip": [7, 9, 18, 19], "participation_ratio": 18, "particl": 29, "particular": [23, 28], "particularli": 17, "pass": [17, 18, 21], "pastewka": [28, 29], "path": [16, 17, 19, 29, 30, 32], "path_to_save_ifc": 17, "patinet": 32, "paul": [28, 32], "paulatto": [28, 29], "pawel": 32, "payn": 32, "pbte": 32, "pdo": 18, "pegolo": [19, 32], "peierl": 29, "peng": 32, "penghua": 32, "pep": 21, "per": [16, 17, 18, 29], "perform": [17, 26, 29, 30, 32], "period": [29, 31], "perman": [25, 30], "permit": 27, "perovskit": 32, "perspect": [17, 29], "perturb": [7, 18, 29, 32], "peterson": [28, 29], "pf": 17, "phani": 32, "phase": [15, 18, 23, 29, 32], "phase_spac": [15, 18, 23, 30], "phenomena": 29, "phi": 29, "phi_": 29, "phi_0": 29, "philip": 32, "phillpot": 29, "phoeb": 32, "phon": 29, "phonon": [16, 17, 26, 29, 30, 31, 32], "phont": 29, "phosphoren": 29, "photoacoust": 32, "phototherm": 32, "phy": [18, 19, 23, 28, 29, 32], "physic": [12, 18, 28, 29], "physical_mod": 18, "physical_mode_": 30, "physik": 29, "physrevb": [7, 9, 18], "pi": [18, 29], "pictur": 29, "pielmeier": 29, "ping": 32, "pinsler": 32, "pip3": 25, "plane": [18, 29], "platform": 26, "ple": 29, "pleas": [15, 18, 28, 30], "plimpton": 28, "plot": [15, 18, 23], "plot_dispers": 23, "plotter": 15, "plt": [15, 23], "pm": 29, "pm_": 29, "pohl": 29, "point": [0, 1, 5, 6, 11, 13, 16, 23, 26, 29, 30, 31], "polar": 32, "poluat": 23, "polym": 32, "ponc": 29, "ponc\u00e9": 28, "pop": 29, "popul": [18, 29, 30], "portion": 16, "poscar": 17, "posit": [17, 29], "possibl": [17, 29, 30], "pota": 32, "potenti": [17, 18, 26, 30, 32], "pourfath": 29, "power": 29, "pr": 21, "practic": 26, "prb": 23, "precalcul": 31, "precis": 29, "predict": 32, "predictor": 17, "prefer": 17, "prefix": 30, "present": 29, "pressur": 32, "pretti": 17, "previou": 29, "primari": 18, "primarili": 29, "prime": 29, "primit": 17, "primitive_fil": 17, "princi": 29, "principl": [19, 26, 29, 32], "print": [15, 17, 18, 23, 29], "pritchard": 29, "prob": 29, "probabl": 18, "probe": 32, "problem": 29, "procedur": 25, "process": [11, 18, 29, 32], "prod": 17, "project": [10, 18, 22, 26, 28, 29], "properti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 29, 32], "proven": 29, "provid": [10, 17, 18, 26, 27, 29], "pseudopotenti": 29, "pseudoptenti": 29, "psi": 29, "psi_": 29, "ptse2": 32, "pu": 29, "public": 31, "pull": [17, 25], "pure": 18, "purpos": 30, "push": 21, "pw": 30, "pwi": 30, "pwo": 30, "pyplot": [15, 23], "pyse": 32, "python": [17, 21, 25, 28, 29, 30], "python3": [23, 25], "pythonpath": 25, "q": [12, 18, 29], "q_": 29, "q_k": 29, "qe": [17, 29, 30], "qhgk": [15, 16, 19, 23, 26, 29], "qian": 32, "qin": 32, "qquad": 29, "quad": 29, "quantiti": [18, 23], "quantiz": 18, "quantum": [5, 13, 15, 17, 18, 19, 23, 28, 29, 32], "quasi": [16, 19, 32], "quasiloc": 32, "quench": 29, "quick": [18, 31], "quickstart": 25, "r": [15, 23, 28, 29], "r_": 29, "r_l": 29, "rabihavi": 32, "rad": [8, 16, 18], "rais": 17, "ramya": 32, "random": 29, "rang": [12, 17, 18, 23, 28, 29], "rapid": 32, "rasmussen": 32, "rate": [29, 32], "ratio": [9, 18, 19], "ratner": 32, "raw": 30, "re": [17, 29, 32], "read": [15, 17, 18, 23, 31], "readabl": 30, "real": [18, 26], "reason": 17, "rebecca": 32, "recent": 29, "recip": 21, "reciproc": [18, 29], "recommend": [18, 25], "reconcil": 29, "rectif": 32, "recurs": 29, "red": 29, "redirect": 23, "redistribut": 27, "reduc": [17, 29], "reduced_third": 17, "referenc": [17, 21], "reflect": 18, "regard": 18, "regim": 29, "regular": 21, "reineck": 29, "reiter": 29, "rel": 29, "relat": [17, 23, 28, 29], "relationship": [17, 18], "relax": [16, 23, 29], "relaxon": 29, "releas": [26, 27], "reli": 18, "reliabl": 18, "remot": 21, "renew": 29, "repeat": [17, 18], "repetit": 17, "replac": [21, 29], "repli": 32, "replic": [17, 18], "replica": 29, "replicated_atom": 17, "repo": [15, 21, 24, 25], "report": [18, 29], "repositori": 21, "repres": [9, 17, 18, 29, 30], "reproduc": 29, "requir": [16, 17, 18, 26, 30], "rescal": 29, "research": 32, "reshap": 23, "resolv": 17, "reson": [16, 29], "respect": 29, "respons": [16, 29], "result": [18, 29], "retriev": 18, "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 23], "rev": [18, 19, 23, 29, 32], "review": [21, 29], "revisit": 29, "rewrit": 29, "rf": [15, 23], "riccardo": 32, "right": 29, "rightarrow": 29, "rilei": 32, "rimoldi": 29, "rivista": 32, "rm": [15, 23, 29], "rmeleitung": 29, "robert": 32, "roberto": 32, "rocca": [28, 29], "roekeghem": 29, "role": 32, "roman": 32, "romano": 32, "room": 29, "rostgaard": [28, 29], "rottler": 32, "roughli": 18, "roza": [28, 29], "rta": [16, 23, 26, 29, 30], "rta_cond_matrix": 23, "ruilin": 32, "rule": [17, 18, 29], "run": [15, 17, 23, 25, 28], "ry": 29, "sabatini": [28, 29], "sachat": 32, "same": [17, 21, 30], "sampl": [18, 30], "sample_data": [15, 23], "samuel": 32, "sandia": 23, "santra": [28, 29], "sarkar": 32, "sarsari": 29, "satisfi": 17, "save": [17, 26, 30], "savic": 29, "sax": 29, "sc": [16, 23], "sc_cond_matrix": 23, "scalabl": [26, 29], "scale": [18, 26, 29, 32], "scaln": 32, "scatt": 29, "scatter": [16, 18, 19, 23, 26, 29, 32], "schi\u00f8tz": [28, 29], "schlipf": [28, 29], "schluter": 29, "schocklei": 16, "schu": [28, 29], "sci": 32, "scienc": [21, 22, 29, 30], "scientif": 29, "script": 18, "seaborn": [15, 23], "seamless": 26, "search": 31, "sebastian": 32, "second": [17, 18, 23, 29, 30], "secondord": 17, "section": [17, 18], "see": [17, 18, 23, 27, 30], "seen": 29, "seitsonen": [28, 29], "select": 16, "self": [16, 17, 23, 26], "semchuk": 32, "semi": 26, "semiconduct": 29, "semiconductor": 29, "sens": [26, 29], "sergei": 32, "seri": [18, 29], "serv": 22, "set": [10, 15, 16, 17, 18, 23, 29, 30], "setup": 18, "sever": 26, "sham": 29, "shangchao": 32, "shankar": 29, "shape": [15, 30], "shear": 32, "shengbt": [17, 29, 30], "shevchenko": 32, "shi": 32, "shift": 29, "shiyu": 32, "shlib": 30, "short": [17, 28, 29], "shorten": 18, "shouhang": 32, "should": 18, "show": [15, 23], "shown": 29, "shuizhou": 32, "shun": 32, "shunda": 32, "si": [23, 29, 32], "sic": 17, "sicg": 23, "siever": 30, "sige": [19, 32], "sigma2": 17, "sigma2_tdep_md": 17, "signific": [17, 32], "silent": 30, "silic": 32, "silica": 32, "silicon": [17, 31, 32], "simeq": 29, "similar": 29, "simliar": 29, "simoncelli": [29, 32], "simpl": 29, "simul": [16, 18, 26, 28, 29, 30, 32], "sin": 32, "singl": [10, 18, 23, 29, 32], "single_cumulative_cond": 23, "site": 25, "situat": 18, "size": [16, 17, 19, 26, 29, 32], "skip": 15, "skovsen": 32, "sledzinska": 32, "slow": 26, "small": [17, 29], "smaller": 29, "smear": 18, "smedskjaer": 32, "smith": 29, "smogunov": [28, 29], "smudg": 15, "snip": 29, "snyder": 32, "so": [17, 18, 29], "soc": 32, "societi": 29, "sodium": 32, "softwar": [17, 22, 23, 26, 27, 29], "solid": [19, 26, 29, 32], "solidi": 32, "solut": [16, 26], "solv": [18, 32], "solver": [26, 29, 32], "some": [17, 18, 28], "sometim": 17, "song": 32, "sood": 29, "sotomayor": 32, "sound": 29, "sourc": [10, 16, 17, 18, 22, 25, 26, 27, 28, 29, 30], "space": [15, 16, 18, 23, 26, 29], "sparavigna": 29, "spars": [17, 18, 29, 30], "sparse_phas": 18, "sparse_potenti": 18, "spatial": 29, "specif": [21, 29, 31], "specifi": [10, 16, 18, 30], "speed": 29, "sphere": 29, "spite": 29, "sqrt": 29, "src": 30, "srikantha": 32, "srivastava": 29, "ss": 32, "ssposcar": 17, "start": [17, 23], "state": [10, 18, 26, 29], "static": 17, "statist": [18, 29, 30], "statu": 32, "stdout": 17, "stefano": [19, 32], "step": [16, 17, 18, 25, 26, 29], "stewart": 29, "stiff": 17, "still": 29, "stop": 17, "storag": [15, 16, 18, 23, 31], "store": [17, 18, 30], "str": [15, 16, 17, 18, 23], "straightforwardli": 29, "strain": [17, 29], "strang": [28, 29], "strategi": 18, "stress": 17, "string": [16, 18], "strive": 18, "strongli": 29, "structur": [15, 17, 29, 30, 32], "studi": [29, 32], "style": [15, 23], "sudo": 23, "suffici": 18, "suggest": 26, "sum": [10, 16, 17, 18, 23, 29], "sum_": 29, "sum_0": 29, "sum_l": 29, "sun": 32, "super": 23, "supercel": [17, 23, 29], "supercell_fil": 17, "superlattic": 32, "support": 22, "suppress": [19, 32], "sure": [16, 17, 21], "svensson": 32, "sviatoslav": 32, "switch": 18, "sylvain": 32, "symmetr": 18, "symmetri": [17, 18, 29], "system": [16, 17, 18, 25, 26, 29, 30], "s\u00f8ren": 32, "s\u00f8rensen": 32, "t": [5, 17, 18, 28, 29, 30, 32], "t_": 17, "tabul": 17, "tadano": 29, "tag": 21, "take": [16, 17, 18, 26, 29], "taldenkov": 29, "tamura": [7, 18, 19], "tan": 32, "tanaka": 29, "tang": 32, "tao": 32, "tapio": 32, "task": 17, "tau": 29, "tau_": 29, "taylor": 29, "tbe": 29, "tdep": [17, 19], "tech": 22, "technic": 18, "techniqu": 32, "technolog": 29, "temperatur": [5, 13, 15, 17, 18, 19, 23, 29, 30, 32], "tensor": [17, 18, 26, 29, 30, 32], "tensorflow": 26, "term": [16, 17, 18, 29], "tersoff": [17, 23, 29], "test": [15, 21, 25], "text": [17, 18, 29], "thakur": 29, "than": [17, 18, 29], "thank": 28, "thei": [17, 29], "them": [17, 24, 28], "theorem": [13, 14, 18], "theori": [16, 18, 19, 26, 28, 29, 30, 32], "thermal": [16, 17, 18, 19, 29, 32], "thermoelectr": [29, 32], "thi": [15, 16, 17, 18, 21, 23, 26, 29, 30], "thick": 32, "thing": [17, 30], "third": [17, 23, 29, 30], "third_bandwidth": [15, 18, 30], "third_energy_threshold": 17, "third_supercel": 17, "thirdord": [17, 30], "thompson": 23, "thonhaus": [28, 29], "thornton": 32, "those": [10, 18, 30], "though": 18, "thousand": 17, "three": [18, 26, 29, 32], "threshold": 17, "through": [17, 18, 26, 29, 32], "thu": [26, 29], "thygesen": [28, 29], "thz": [2, 4, 5, 15, 18, 23, 30], "tian": 32, "tie": 32, "tight": 26, "tild": [5, 18, 29], "time": [16, 17, 23, 29, 30], "timrov": [28, 29], "ting": 32, "tisi": 32, "todai": 32, "todo": 18, "togo": 29, "toler": [16, 32], "tool": [17, 32], "torr": 32, "total": [10, 17, 18, 29], "trace": 16, "tractabl": 17, "trajectori": 17, "transf": 32, "transfer": [15, 29, 32], "transfom": 29, "transform": 30, "transit": 29, "translat": [9, 18], "transport": [16, 19, 26, 32], "treat": 18, "treatment": 29, "triangl": [15, 16, 18], "true": [15, 17, 18, 23, 29], "truncat": 18, "try": [17, 30], "tsuneyuki": 29, "tt": [28, 29], "tunabl": 29, "tupl": [16, 17, 18], "ture": 29, "turn": 29, "tutori": 32, "two": [17, 18, 29, 32], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18], "tyvonovych": 32, "u": [18, 21, 28, 29], "u_": 29, "ucposcar": 17, "ultra": 32, "ultrahigh": [19, 29, 32], "ultralow": 32, "ultrasoft": 29, "umari": [28, 29], "under": [27, 29], "underli": 29, "understand": [29, 32], "unearth": 32, "unfold": 18, "unfold_third_ord": 17, "unifi": [19, 29], "uninstal": 25, "unit": [16, 17, 18, 23, 29, 31, 32], "unitcel": 30, "unitless": 23, "unravel": 32, "until": 21, "up": [21, 29], "updat": [23, 30], "upgrad": 23, "us": [13, 14, 15, 16, 18, 19, 24, 26, 27, 28, 29, 30, 31], "user": [17, 18, 26, 30], "v": [15, 23, 28, 29, 31], "v0_8": [15, 23], "v_": 29, "vacanc": 32, "vaez": [29, 32], "valu": [9, 16, 17, 18, 30], "van": 29, "variabl": 30, "variant": 23, "variat": 29, "variou": 23, "vasp": 17, "vast": [28, 29], "vasyl": 32, "vector": [16, 17, 18, 29], "vegg": [28, 29], "veloc": [17, 18, 23, 29], "velocity_alpha": 30, "venv": 23, "vergnaud": 32, "vermeersch": 29, "versatil": [26, 29], "version": 30, "verstraet": 32, "via": 32, "vibrat": [17, 18, 29, 32], "viii": 29, "viktoria": 32, "vilhelmsen": [28, 29], "virginia": 22, "virtualenv": [23, 30], "viswanathan": 32, "vogel": 29, "volum": 29, "volz": 32, "voyl": 32, "w": [6, 15, 16, 18, 19, 23, 27, 28, 29, 30, 32], "wa": [18, 29], "wai": [18, 25, 30], "wainwright": 29, "walk": [17, 29], "wall": 32, "walter": [28, 29], "wang": [29, 32], "want": [16, 17, 18, 25, 28], "ward": 29, "wave": 29, "wavelength": [18, 29], "we": [17, 18, 21, 22, 23, 25, 26, 28, 29], "wei": [29, 32], "weigh": 29, "weight": [5, 18, 29, 32], "weitz": 29, "welch": 32, "well": [15, 17, 18, 29], "wengen": 32, "wenji": 32, "wenjiang": 32, "wenwu": 32, "were": 18, "what": [18, 21], "when": [16, 17, 18, 26, 29, 30], "where": [5, 17, 18, 21, 29, 30], "wherea": 29, "whether": 18, "which": [17, 18, 22, 23, 29, 30], "while": [26, 28, 29, 30], "whole": 28, "whose": 17, "wide": 29, "width": [18, 29], "wieser": 18, "wigner": 32, "wilkin": 29, "wilkinson": 32, "william": 32, "windu": 29, "wire": 18, "within": 17, "without": [17, 25, 27], "witt": 32, "work": [17, 19, 28, 29], "workflow": 31, "would": [18, 30], "wrapper": 17, "write": 21, "writefil": 23, "written": 29, "wu": [28, 29], "wurtzit": 32, "x": [16, 21, 26, 28, 29, 30], "x_": 29, "xia": 32, "xiang": 32, "xiangjun": 32, "xianshun": 32, "xiao": 32, "xiaokun": 32, "xie": 32, "xing": 32, "xiong": [29, 32], "xiongfei": 32, "xixian": 32, "xlabel": [15, 23], "xu": 32, "xupe": 32, "xyz": 17, "y": [16, 21, 23, 28, 29, 32], "yamac": 32, "yaml": 21, "yan": 32, "yang": 32, "yanguang": 32, "yangyu": 32, "yanzhou": 32, "yao": 32, "yazdani": 32, "yazdi": 32, "ye": [23, 30], "yi": 32, "yichi": 32, "yield": 18, "ying": 32, "ylabel": [15, 23], "ylim": [15, 23], "yokota": 29, "you": [15, 16, 17, 18, 21, 23, 25, 28, 30], "your": [17, 18, 21, 30], "yox": 32, "yu": 32, "yuan": 32, "yuanbin": 32, "yuanyuan": 32, "yuanzheng": 32, "yucheng": 32, "yue": 32, "yushkin": 29, "yyyyyi": 21, "z": [16, 21, 28, 29, 32], "z0": 21, "zekun": [19, 27, 32], "zeng": [28, 29, 32], "zeni": 32, "zeolit": 32, "zeraati": 29, "zero": [18, 29], "zero_point_harmonic_energi": 18, "zeros_lik": 23, "zezhu": 32, "zhang": 32, "zhao": 32, "zheyong": [19, 32], "zhiqiang": 32, "zhongwei": 32, "zhou": 32, "zhu": 32, "zhuangli": 32, "ziheng": 32, "ziman": 29, "zone": [18, 29], "zpe": 18, "zur": 29, "z\u00fcgner": 32, "\u03baaldo": 26}, "titles": ["kaldo.phonons.Phonons.anharmonic_bandwidth", "kaldo.phonons.Phonons.bandwidth", "kaldo.phonons.Phonons.eigenvalues", "kaldo.phonons.Phonons.eigenvectors", "kaldo.phonons.Phonons.frequency", "kaldo.phonons.Phonons.heat_capacity", "kaldo.phonons.Phonons.heat_capacity_2d", "kaldo.phonons.Phonons.isotopic_bandwidth", "kaldo.phonons.Phonons.omega", "kaldo.phonons.Phonons.participation_ratio", "kaldo.phonons.Phonons.pdos", "kaldo.phonons.Phonons.phase_space", "kaldo.phonons.Phonons.physical_mode", "kaldo.phonons.Phonons.population", "kaldo.phonons.Phonons.velocity", "Amorphous silicon tutorial", "Conductivity", "ForceConstants", "Phonons", "How to cite", "Code Architecture", "How to contribute changes", "Acknowledgements", "Silicon diamond tutorial", "Examples", "Quick Install", "Overview", "License Information", "Other codes", "Basic Concepts", "Interfacing with Other Codes", "kALDo: Advanced Thermal Property Predictions via Lattice Dynamics and Machine Learning for Nanoscale Materials.", "Publications using kALDo"], "titleterms": {"10": 23, "12": 32, "13": 32, "16": 32, "2": 32, "2020": 32, "2021": 32, "2022": 32, "2023": 32, "2024": 32, "2025": 32, "4": 32, "8": 32, "ab": 29, "access": [15, 23], "acknowledg": [22, 31], "advanc": 31, "altern": 30, "amorph": [15, 29], "anharmonic_bandwidth": 0, "api": [16, 17, 18], "architectur": 20, "argument": 18, "auto": 21, "bandwidth": 1, "basic": 29, "boltzman": 29, "built": 23, "bulk": 23, "calcul": [15, 17, 23], "case": 18, "chang": 21, "checklist": 21, "citat": 31, "cite": 19, "classic": 18, "code": [20, 28, 30], "compli": 23, "concept": 29, "conduct": [16, 23], "contribut": 21, "copyright": 27, "creat": [15, 23], "cum": [15, 23], "data": 15, "default": 30, "develop": [25, 31], "diamond": [23, 29], "dure": [15, 23], "dynam": 31, "eigenvalu": 2, "eigenvector": 3, "equat": 29, "espresso": 30, "exampl": [24, 31], "execut": 30, "featur": 26, "fetch": 15, "file": [17, 23], "forceconst": 17, "forcefield": 23, "format": 17, "frequenc": 4, "gener": 18, "get": 31, "green": 29, "guid": 31, "harmon": [23, 29], "heat_capac": 5, "heat_capacity_2d": 6, "hint": [17, 18], "how": [19, 21], "i": 17, "ifc": 17, "index": 31, "infinit": 23, "inform": 27, "initio": 29, "input": 17, "instal": [15, 23, 25], "interatom": 29, "interfac": 30, "introduct": 31, "isotopic_bandwidth": 7, "k": 18, "kaldo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 31, 32], "kappa_": [15, 23], "kappaaldo": [15, 23], "kubo": 29, "lammp": [23, 30], "lattic": 31, "learn": 31, "librari": [23, 30], "licens": [27, 31], "limit": 18, "load": 17, "machin": 31, "materi": 31, "min": 23, "mode": [15, 23, 25], "my": 17, "nanoscal": 31, "object": [15, 23], "omega": 8, "other": [28, 30], "output": 30, "overview": 26, "participation_ratio": 9, "pdo": 10, "per": [15, 23], "period": 18, "phase_spac": 11, "phonon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23], "physical_mod": 12, "pip": [15, 23, 25], "plotter": 23, "point": 18, "popul": 13, "potenti": 29, "precalcul": 17, "predict": 31, "preprint": 32, "project": 21, "properti": [15, 23, 31], "public": 32, "python": 23, "quantum": 30, "quasi": 29, "quick": 25, "refer": [16, 17, 18, 19, 29, 31], "remot": 15, "sampl": 23, "setup": 30, "share": 23, "should": 17, "si": 15, "silicon": [15, 23, 29], "sim": 23, "simul": [15, 23], "size": 23, "specif": 18, "start": 31, "storag": 30, "supplyment": 15, "templat": 21, "thermal": [15, 23, 31], "transport": [15, 23, 29], "tutori": [15, 23, 31], "unit": 30, "updat": 21, "us": [17, 23, 25, 32], "user": 31, "v": 18, "veloc": 14, "version": 21, "via": 31, "virtualenv": 25, "visual": [15, 23], "workflow": [17, 29], "write": 23}})